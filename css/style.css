*,
*::after,
*::before {
  margin: 0;
  /* creates space around an element*/
  padding: 0;
  /* creates space around the content of an elements*/
  box-sizing: inherit; }

/*root font-size*/
html {
  /*This defines what 1rem is*/
  font-size: 62.5%; }

body {
  padding: 3rem;
  box-sizing: border-box;
  /* Allows us to include padding & border in an elements total width & height*/ }

/*
pseudo classes are a special state in an element
style an element when mouse hovers over it
style a visited/unvisited link differently
style an element on focus
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translate(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translate(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*Decides whether or not element should be visible to user*/
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    /* display elements one after the other*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-in; }

.btn {
  /*
  used to style specific parts of an element
  */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-size: 1.6rem;
    /*Always set font-size to rems not pixels*/ }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleY(1.5) scaleX(1.6);
      /* scale increases the element*/
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    display: inline-block;
    /* display text according to the writing mode*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  /*view port height : allow us to size elements & font as a percentage of its total width r height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /*Lets you change the elements position*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* creates clipping region for which part of an element should be shown */ }
  .header__logo-box {
    position: absolute;
    /*They are not positioned based on their usual place but on the position of their ancestor*/
    top: 4rem;
    /* For both top & left to work we need position relative*/
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

/* 1rem = 10px*/
.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto;
  /* centering the row(block elements) */
  /*not() will select only the elements you want to style*/
  /*
  ^ select class attributes start with col
  * select all class attributes 
  $ select class attributes end with col
  [class^= "col-"] => prevents us from repeating code
  */ }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }
